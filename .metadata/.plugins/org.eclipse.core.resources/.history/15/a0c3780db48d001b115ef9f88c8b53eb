
import java.util.*;
import java.text.*;
import java.time.LocalTime;
public class MuseumSystem{
	Scanner input = new Scanner(System.in);
	public	String name;
	public	String address;
	public String description;  
    ArrayList <Visitor> Vlist ;
    ArrayList <Guide> Guideslist;
    ArrayList <WorkingDay> WD1 ;
   
    
	public MuseumSystem(String name, String address, String description,WorkingDay wd)
			 {
		
		this.name = " Museum The Shadow";
		this.address = " Balata_Nablus_Palestine";
		this.description = " A museum of some of the antiquities found in Tell Balata area";
		Vlist=new ArrayList <Visitor>();
		Guideslist=new  ArrayList <Guide> ();
		WD1=new ArrayList <WorkingDay> () ;
	}
	MuseumSystem(){;
	}



	@Override
	public String toString() {
		return "Welcome in Museum"
				+ "\nName of Museum:" + " Museum The Shadow" + 
			   "\nAddress:" +" Balata_Nablus_Palestine" +
				"\nDescription:" + " A museum of some of the antiquities found in Tell Balata area" +
				
				"\nWorking Day:" + "Sunday to Thuresday"+"\n" ;
	}



	public ArrayList<Visitor> getVlist() {
		return Vlist;
	}



	public void setVlist(ArrayList<Visitor> vlist) {
		Vlist = vlist;
	}
	public ArrayList<Guide> getGuidelist() {
		return this.getGuidelist();		
	
	}
	public void setGuidelist(ArrayList<Guide> guideslist) {
		this.setGuidelist(guideslist);
		
	}
	public ArrayList<Guide> getAvailableguides(WorkingDay Wk){
		ArrayList<Guide> l=new ArrayList<Guide>();
		
		 
		for (Guide g : Guideslist)  
        { 
			for ( WorkingDay W :  g.getWD1()) {
			if(g.getWD1().contains(Wk) ) {
				
				l.add(g);
			}
			}
        
        
		
	}
		return l;
	}
	public Visitor ReadVisitor(Visitor s) {
		
		ArrayList<Visitor> visitor;
		ArrayList<VisitorRecord> visitorRe;
		visitorRe=new ArrayList<VisitorRecord>();
		visitor = new ArrayList<Visitor>();
		int idv, Num_ofVisit = 0;
		String nv, addv, N_Tv;
		System.out.println("please Enter your following information ");
		System.out.println("1.Visitor Name ");
		nv = input.next();
		System.out.println("2.Visitor id ");
		idv = input.nextInt();
		System.out.println("3.Visitor Address ");
		addv = input.next();
		System.out.println("4.Visitor Birth Day:Year,Month,Week ");
		Calendar dobv = Calendar.getInstance();
		dobv.set(input.nextInt(), input.nextInt(), input.nextInt());
		System.out.println("5.Visitor Telephone Numbur ");
		N_Tv = input.next();		
		System.out.printf("you are record id is ",+ s.getRecord_id() +"\n");
		//Date date = new Date();
		//LocalTime l1 = LocalTime.now();
		//VisitorRecord vr = new VisitorRecord();
		//vr.setEnteringdate(date);
		//vr.setEnteringtime(l1);
		s.setAddress(addv);
		s.setDateOfbirth(dobv);
		s.setName(nv);
		s.setNum_ofVisit(Num_ofVisit);
		s.setNumOftelph(N_Tv);
		s.setRecord_id(s.record_id);
		s.SetV_id(idv);
		//s.VisitorRecord1.add(vr);
		//visitorRe.add(vr);
		//s.setVisitorRecord1(visitorRe);
		
		
		
		
		
		
		
		
		
		return s;
		
		
		
	}

	public void addVisitor(Visitor s) {		
		int i;
		i = s.getRecord_id();
		i++;
		
		s.setRecord_id(i);		
		Vlist.add(s);
		setVlist(Vlist);;
		
		System.out.println(" visitor has been successfully registered\r\n"
				+ "Now go create a subscription\r\n");
				
		
	}
	public Guide Read(Guide gs) {
	
		int id,T_P_D, n1;
		String n,add,N_T;
		System.out.println("1.Enter guide Name ");
		n=input.next();
		System.out.println("2.Enter guide id ");
		id=input.nextInt(); 
		System.out.println("3.Enter guide Telephone Numbur ");
	    N_T=input.next();
	    System.out.println("4.Enter guide Birth Day:Year,Month,Week ");
		Calendar Dob1=Calendar.getInstance();
		Dob1.set(input.nextInt(),input.nextInt(),input.nextInt());
		System.out.println("5.Enter guide Address ");
		add=input.next();
		ArrayList <WorkingDay> WD1 ;
		WD1=new ArrayList <WorkingDay>();
		 
		 int f=10;
		
		System.out.println("6.Specify guide’s working days(enter number of day) (maximum 5 days/week):");
		List<WorkingDay> Workingdaylist = new ArrayList<WorkingDay>();
		while(f!=0) { 
			System.out.println("1.Sunday\n2.Monday\n3.Tuseday\n4.Wenseday\n5.Thuresday\nif you are finish enter 0");
		 f=input.nextInt();
		 WorkingDay w4 = null  ;
		 switch (f) {
		 case 1: WD1.add(w4.SUNDAY);
		break;
		 case 2: WD1.add(w4.MONDAY);
		 break;
		 case 3: WD1.add(w4.TUSEDAY);
		 break;
		 case 4: WD1.add(w4.WEDNESDAY);
		break;
		 case 5: WD1.add(w4.THURSDAY);
		 default :
			 System.out.println("Wrong entry !\nTry again");
			 break;
		 }
		
		}
		System.out.println("7.Specify guide’s number of tours/day (maximum 3 tours/day): ");
		
		T_P_D=input.nextInt();
         if(T_P_D<=3) {
        	 
        	 gs.setM_tour_perday(T_P_D);
         }
		 ArrayList<Languages> Langueges1 = new ArrayList<>();
		 int f1=1;
		 Languages k = null;
			while(f1!=0) {
				System.out.println("8.Specify guide’s spoken languages (Click enter after each languege you are entered):\n1.ARABIC\n2.ENGLISH\n3.FRENCH \n4.Spanish \n5.Turkish\n6.CHINES");
				System.out.println("To finish Enter 0");
				f1=input.nextInt();
				 switch (f1) {
				 case 1: Langueges1.add(k.ARABIC);
				break;
				 case 2: Langueges1.add(k.ENGLISH);
				break;
				 case 3: Langueges1.add(k.FRENCH);
				break;
				 case 4: Langueges1.add(k.Spanish);
				break;
				 case 5: Langueges1.add(k.Turkish);
				break; 
				 case 6: Langueges1.add(k.CHINES);
				break;
				 default :
					 System.out.println("Wrong entry !\nTry again");
					 break;
				 }
			
			}
			
			 
			
		
		
		
		
		
		System.out.printf("9.your employee id is:",+gs.getEmployee_id()+"\n");
		System.out.println("\n10.Enter Hire Date ");
		Calendar D2=Calendar.getInstance();
		D2.set(input.nextInt(),input.nextInt(),input.nextInt());
		System.out.println("You have been successfully registered ");
		gs.setHire_Date(D2);	
		gs.setAddress(add);
		gs.setDateOfbirth(Dob1);
		gs.setName(n);
		gs.setNumOftelph(N_T);
		gs.setWD1(WD1);
		gs.set_Languages(Langueges1);
		gs.setEmployee_id(gs.employee_id);
		
		
		
		
		
		
		
		return gs;
		
		
		
	}
	
	
	
	
public void addGuide(Guide g1) {
	
	int nd;
	Guideslist.add(g1);
	nd=g1.getEmployee_id() ;
	nd++;
	g1.setEmployee_id(nd);
}
public boolean availablevisitor (int s) {
	
    for (Visitor V1 : Vlist)  
    { 
		
		if(V1.getID()==s) {
			
			 return true;
		}
		
    }
   
return false;
}

public Visitor getvisitor(int f) {
	
	  for (Visitor V1 : Vlist)  
	    { 
			
			if(V1.getID()==f) {
				
				 return V1;
			}
			
	    }
	
	return null;
	
	
}



	}
